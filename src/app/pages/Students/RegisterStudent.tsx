import { Formik, Form } from 'formik';
import * as Yup from 'yup';
import StudentInformation from './StudentRegister/StudentInformation';
import ContactDetails from './StudentRegister/ContactDetails/ContactDetails';
import AcademicDetails from './StudentRegister/AcademicDetails/AcademicDetails';
import Address from './StudentRegister/Address/Address';
import { Button } from 'react-bootstrap';
import { useState } from 'react';
import StudentTable from '../../content/Table/StudentTable';
const data = [
  {
    TemplateName: "TICKET SMS TERM",
    TemplateType: "Mail",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    CreatedDate: "31-02-2025 02:38:56",
    Action: "Actions"
  },
  {
    TemplateName: "Ticket Mail Alerts",
    TemplateType: "SMS",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    Action: "Actions"
  },
  {
    TemplateName: "Customer Reject Mail Send Template",
    TemplateType: "Mail",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    Action: "Actions"
  },
  {
    TemplateName: "Customer create mail login type username and password",
    TemplateType: "SMS",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "No Activity",
    Action: "Actions"
  },
  {
    TemplateName: "demo teplete",
    TemplateType: "SMS",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    Action: "Actions"
  },
  {
    TemplateName: "TICKET POST ANL INTERNAL",
    TemplateType: "Mail",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "No Activity",
    Action: "Actions"
  },
  {
    TemplateName: "USER CREATE Template",
    TemplateType: "SMS",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    Action: "Actions"
  },
  {
    TemplateName: "ALERT SEPARATE MAIL",
    TemplateType: "SMS",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "Vasal Vikas Sahakari Bank Ltd",
    Action: "Actions"
  },
  {
    TemplateName: "Alert To Admin",
    TemplateType: "Mail",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "No Activity",
    Action: "Actions"
  },
  {
    TemplateName: "Reopen_Clos",
    TemplateType: "Mail",
    CreatedDate: "31-02-2025 02:38:56",
    Updateby: "No Activity",
    Action: "Actions"
  }
];
function RegisterStudent() {

  const [Show, SetShow] = useState<boolean>(false);

  const initialValues = {
    firstName: '',
    lastName: '',
    username: '',
    email: '',
    phone: '',
    city: '',
    state: '',
    zip: '',
    address: '',
    course: '',
    department: '',
  };

  const validationSchema = Yup.object({
    firstName: Yup.string().required('Required'),
    lastName: Yup.string().required('Required'),
    username: Yup.string().required('Required'),
    email: Yup.string().email('Invalid email').required('Required'),
    phone: Yup.string().required('Required'),
    city: Yup.string().required('Required'),
    state: Yup.string().required('Required'),
    zip: Yup.string().required('Required'),
    address: Yup.string().required('Required'),
    course: Yup.string().required('Required'),
    department: Yup.string().required('Required'),
  });

  const handleSubmit = (values: typeof initialValues) => {
    console.log('Form submitted with values:', values);
  };
  const handleEditableData = () => {

  }

  const handleDeleteRecord = () => {

  }

  return (
    <>
      {
        Show ? (
          <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>
            {() => (
              <Form className="position-relative overflow-scroll  form-height" >
                <div>
                  <StudentInformation />
                  <Address />
                  <AcademicDetails />
                  <ContactDetails />

                </div>
                <div className="position-sticky bottom-0 bg-white p-2 w-100 border-top">
                  <div className="d-flex justify-content-between align-items-center">
                    <p className="m-0 mt-2 fw-medium" style={{ fontSize: "10px" }}>
                      <span className="text-danger fw-bold">Note: </span>Customer ID is automatically generated by the system or database using an auto-increment feature on save.
                    </p>
                    <div className="d-flex gap-3">
                      <Button variant="secondary" className="text-sm" onClick={() => SetShow(!Show)} >Cancel</Button>
                      <Button variant="success" type="submit" className="text-sm">Submit</Button>
                    </div>
                  </div>
                </div>


              </Form>
            )}
          </Formik>
        ) :
          (
            <StudentTable data={data} handleEditableData={handleEditableData} handleDeleteRecord={handleDeleteRecord} SetShow={SetShow} Show={Show} />

          )

      }



    </>




  );
}

export default RegisterStudent;
